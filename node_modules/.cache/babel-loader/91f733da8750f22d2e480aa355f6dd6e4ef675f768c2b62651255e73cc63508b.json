{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\\\uC784\\uACBD\\uD6C8 \\uC870\\uC724\\uC2DD \\uC606\\uC790\\uB9AC \\uC7A0\\uAE50 \\uCC28\\uC9C0\\\\src\\\\components\\\\sub\\\\Department.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Layout from '../common/Layout';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Department() {\n  _s();\n  const path = process.env.PUBLIC_URL;\n  const [Members, setMembers] = useState([]);\n  useEffect(() => {\n    axios.get(process.env.PUBLIC_URL + \"/DB/members.json\").then(json => {\n      setMembers(json.data.members);\n    });\n  }, []);\n  useEffect(() => {\n    console.log(Members);\n  }, [Members]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    name: \"Department\",\n    children: Members.map((el, index) => /*#__PURE__*/_jsxDEV(\"article\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"picFrame\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reflect\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${path}/img/${el.pic}`,\n              alt: el.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pic\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${path}/img/${el.pic}`,\n              alt: el.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: el.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: el.position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n// jsx문법\n//if문을 쓰면안되는이유, 기본for문을 사용하면 안되는이유\n//if문경우 if () else /else  그 순서대로 읽지를 못하기 때문에 -> 3항연산자나 &&등의 논리연산자로 조건문을 수행하여야한다\n//반복문도 리액트에서는 반복할때 각 반복되는 요소별로 고유 key값이 부여되어야하는데 기본for문은 할수없고, 따라서 map으로 반복문을 사용합니다\n_s(Department, \"tFWMWr6SzVjB5P4XzE3zKtUU54g=\");\n_c = Department;\nexport default Department;\n/*\r\naxios vs fetch\r\n\r\naxios 에대한 설명\r\naxios는 설치가 필요하다\r\n보안기능을 제공한다\r\n자동으로JSON데이터변환을 지원합니다\r\nhttp요청을 기본적으로 제공합니다\r\n다운로드 프로세스를 지원합니다\r\n\r\nfetch에 대한 설명\r\nfetch는 설치가 필요없다\r\n보안기능이 없음 \r\n수동으로 JSON데이터 변환을 핸들링해줘야함\r\nhttp요청을 제공하지않음\r\n다운로드 프로세스도 지원안함\r\n\r\n\r\n*/\n\n/*\r\nSSR  vs CSR\r\n웹페이지 렌더링 방식에 대한 개념\r\n\r\nSPA vs MPA\r\nSPA (Single Page Application)\r\nMPA (Multi Page Application)\r\n\r\n웹 애플리케이션의 구조와 페이지 전환 방식에 대한 개념\r\n\r\nSPA 는 한개의 html페이지만 가지며, 필요한 콘텐츠는 동적으로 JS를 통해서\r\n로드를 합니다\r\n이후 사용자와의 상호작용에 따라서 페이지를 새로고침없이 동적으로만 업데이트를 합니다\r\n-> react\r\n\r\nMPA는 전통적인 웹 애플리케이션 방식입니다\r\n각각의 페이지마다 고유한 URL을 부여합니다, 사용자 요청에 따라서\r\n새로운 페이지를 전달하는 방식입니다\r\n\r\n\r\n리액트는 CSR의 렌더링 방식으로 SPA의 구조와 페이지 전환 방식으로 구현된\r\n웹어플리케이션을 만드는 도구입니다\r\n\r\nSSR을 사용하는 SPA가 있습니다\r\nNEXT.js라는 리액트 기반 SSR지원하는 프레임워크입니다\r\n\r\nMPA - CSR덧입히는것 - 블로그 포스팅방식\r\n상품 목록페이지는 전통적인 SSR을 가져오고\r\n하지만 필터링을 하거나 정렬할 때는 동적으로만 하도록 CSR을 덧붙이는 \r\n하이브리드로 사용하기도 합니다\r\n\r\n\r\n\r\n\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Department\");","map":{"version":3,"names":["React","Layout","useState","useEffect","axios","jsxDEV","_jsxDEV","Department","_s","path","process","env","PUBLIC_URL","Members","setMembers","get","then","json","data","members","console","log","name","children","map","el","index","className","src","pic","alt","fileName","_jsxFileName","lineNumber","columnNumber","position","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/임경훈 조윤식 옆자리 잠깐 차지/src/components/sub/Department.js"],"sourcesContent":["import React from 'react'\r\nimport Layout from '../common/Layout'\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nfunction Department() {\r\n  const path = process.env.PUBLIC_URL;\r\n  const [Members, setMembers] = useState([]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.PUBLIC_URL + \"/DB/members.json\")\r\n      .then((json) => { setMembers(json.data.members); })\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(Members);\r\n  }, [Members])\r\n  return (\r\n    <Layout name={\"Department\"}>\r\n      {Members.map((el, index) => (\r\n        <article key={index}>\r\n          <div className=\"inner\">\r\n            <div className=\"picFrame\">\r\n              <div className=\"reflect\">\r\n                <img src={`${path}/img/${el.pic}`} alt={el.name} />\r\n              </div>\r\n              <div className=\"pic\">\r\n                <img src={`${path}/img/${el.pic}`} alt={el.name} />\r\n              </div>\r\n            </div>\r\n\r\n            <h2>{el.name}</h2>\r\n            <p>{el.position}</p>\r\n          </div>\r\n        </article>\r\n      ))}\r\n\r\n    </Layout>\r\n  )\r\n}\r\n// jsx문법\r\n//if문을 쓰면안되는이유, 기본for문을 사용하면 안되는이유\r\n//if문경우 if () else /else  그 순서대로 읽지를 못하기 때문에 -> 3항연산자나 &&등의 논리연산자로 조건문을 수행하여야한다\r\n//반복문도 리액트에서는 반복할때 각 반복되는 요소별로 고유 key값이 부여되어야하는데 기본for문은 할수없고, 따라서 map으로 반복문을 사용합니다\r\nexport default Department\r\n/*\r\naxios vs fetch\r\n\r\naxios 에대한 설명\r\naxios는 설치가 필요하다\r\n보안기능을 제공한다\r\n자동으로JSON데이터변환을 지원합니다\r\nhttp요청을 기본적으로 제공합니다\r\n다운로드 프로세스를 지원합니다\r\n\r\nfetch에 대한 설명\r\nfetch는 설치가 필요없다\r\n보안기능이 없음 \r\n수동으로 JSON데이터 변환을 핸들링해줘야함\r\nhttp요청을 제공하지않음\r\n다운로드 프로세스도 지원안함\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nSSR  vs CSR\r\n웹페이지 렌더링 방식에 대한 개념\r\n\r\nSPA vs MPA\r\nSPA (Single Page Application)\r\nMPA (Multi Page Application)\r\n\r\n웹 애플리케이션의 구조와 페이지 전환 방식에 대한 개념\r\n\r\nSPA 는 한개의 html페이지만 가지며, 필요한 콘텐츠는 동적으로 JS를 통해서\r\n로드를 합니다\r\n이후 사용자와의 상호작용에 따라서 페이지를 새로고침없이 동적으로만 업데이트를 합니다\r\n-> react\r\n\r\nMPA는 전통적인 웹 애플리케이션 방식입니다\r\n각각의 페이지마다 고유한 URL을 부여합니다, 사용자 요청에 따라서\r\n새로운 페이지를 전달하는 방식입니다\r\n\r\n\r\n리액트는 CSR의 렌더링 방식으로 SPA의 구조와 페이지 전환 방식으로 구현된\r\n웹어플리케이션을 만드는 도구입니다\r\n\r\nSSR을 사용하는 SPA가 있습니다\r\nNEXT.js라는 리액트 기반 SSR지원하는 프레임워크입니다\r\n\r\nMPA - CSR덧입히는것 - 블로그 포스팅방식\r\n상품 목록페이지는 전통적인 SSR을 가져오고\r\n하지만 필터링을 하거나 정렬할 때는 동적으로만 하도록 CSR을 덧붙이는 \r\n하이브리드로 사용하기도 합니다\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}