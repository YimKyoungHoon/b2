{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\\\uC784\\uACBD\\uD6C8 \\uC870\\uC724\\uC2DD \\uC606\\uC790\\uB9AC \\uC7A0\\uAE50 \\uCC28\\uC9C0\\\\src\\\\components\\\\sub\\\\Gallery.js\",\n  _s = $RefreshSig$();\nimport Layout from '../common/Layout';\nimport Pop from '../common/Pop';\nimport axios from 'axios';\nimport Masonry from 'react-masonry-component';\nimport { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Gallery() {\n  _s();\n  const frame = useRef(null);\n  const [Items, setItems] = useState([]);\n  const [Index, setIndex] = useState(0);\n  const [Open, setOpen] = useState(false);\n  const [Loading, setLoading] = useState(true);\n  const masonryOptions = {\n    transitionDuration: '0.5s'\n  };\n  /*\r\n  async/await를 사용한 코드는 비동기 작업의 흐름을 더 명확하게 보여줍니다\r\n  또한 await를 통해서 axios호출이 완료될 때까지 기다리게 함으로써\r\n  코드의 실행 순서가 더 직관적입니다\r\n  */\n  const key = '4612601b324a2fe5a1f5f7402bf8d87a';\n  method_interest = 'flickr.interestingness.getList';\n  const method_user = 'flickr.people.getPhotos';\n  const num = 50000;\n  const user = '164021883@N04';\n  const url_interest = `https://www.flickr.com/services/rest/?method=${method_interest}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1`;\n  const url_user = `https://www.flickr.com/services/rest/?method=${method_user}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1&user_id=${user}`;\n  const getFlckr = async () => {\n    try {\n      const response = await axios.get(url); //json의 형식Data가 담겨져 있는 변수\n      if (response.data && response.data.photos && response.data.photos.photo) {\n        setItems(response.data.photos.photo);\n        setTimeout(() => {\n          frame.current.classList.add(\"on\");\n          setLoading(false);\n        }, 2000);\n      } else {\n        console.log(\"데이터 형식이 JSON과 다릅니다\");\n      }\n    } catch (error) {\n      console.log(\"데이터를 가져오는 동안 오류가 발생했습니다\");\n    }\n  };\n  useEffect(() => {\n    getFlckr(url_interest);\n  }, []);\n  //리액트에서 컴포넌트는 재사용성이 있어야 합니다\n  //즉 같은 기능을 하는 컴포넌트라면 재사용할 수 있어야 한다는 뜻\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      name: \"Gallery\",\n      children: [Loading && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"loading\",\n        src: process.env.PUBLIC_URL + '/img/loading.gif'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"frame\",\n        ref: frame,\n        children: [/*#__PURE__*/_jsxDEV(Masonry, {\n          elementType: div,\n          options: masonryOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), Items.map((el, index) => {\n          return /*#__PURE__*/_jsxDEV(\"article\", {\n            onClick: () => {\n              setIndex(Index);\n              setOpen(true);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pic\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://live.staticflickr.com/${el.server}/${el.id}_${el.secret}_m.jpg`,\n                  alt: el.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: el.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), Open && /*#__PURE__*/_jsxDEV(Pop, {\n      setOpen: setOpen,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://live.staticflickr.com/${Items[Index].server}/${Items[Index].id}_${Items[Index].secret}_b.jpg`,\n        alt: Items[Index].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n}\n_s(Gallery, \"u5u8ymoeifFzfT5fTokx9hNnnQg=\");\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["Layout","Pop","axios","Masonry","useEffect","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Gallery","_s","frame","Items","setItems","Index","setIndex","Open","setOpen","Loading","setLoading","masonryOptions","transitionDuration","key","method_interest","method_user","num","user","url_interest","url_user","getFlckr","response","get","url","data","photos","photo","setTimeout","current","classList","add","console","log","error","children","name","className","src","process","env","PUBLIC_URL","fileName","_jsxFileName","lineNumber","columnNumber","ref","elementType","div","options","map","el","index","onClick","server","id","secret","alt","title","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/임경훈 조윤식 옆자리 잠깐 차지/src/components/sub/Gallery.js"],"sourcesContent":["import Layout from '../common/Layout'\r\nimport Pop from '../common/Pop'\r\nimport axios from 'axios'\r\nimport Masonry from 'react-masonry-component';\r\nimport { useEffect, useState, useRef } from 'react';\r\n\r\n\r\nfunction Gallery() {\r\n  \r\n  const frame = useRef(null);\r\n  const [Items, setItems] = useState([]);\r\n  const [Index, setIndex] = useState(0);\r\n  const [Open, setOpen] = useState(false);\r\n  const [Loading, setLoading] = useState(true);\r\n  const masonryOptions = { transitionDuration: '0.5s' }\r\n  /*\r\n  async/await를 사용한 코드는 비동기 작업의 흐름을 더 명확하게 보여줍니다\r\n  또한 await를 통해서 axios호출이 완료될 때까지 기다리게 함으로써\r\n  코드의 실행 순서가 더 직관적입니다\r\n  */\r\n  const key = '4612601b324a2fe5a1f5f7402bf8d87a';\r\n     method_interest = 'flickr.interestingness.getList';\r\n  const method_user = 'flickr.people.getPhotos';\r\n  const num = 50000;\r\n  const user = '164021883@N04';\r\n  const url_interest = `https://www.flickr.com/services/rest/?method=${method_interest}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1`;\r\n  const url_user = `https://www.flickr.com/services/rest/?method=${method_user}&per_page=${num}&api_key=${key}&format=json&nojsoncallback=1&user_id=${user}`;\r\n  \r\n  const getFlckr = async() => {\r\n    \r\n    \r\n    try{\r\n      const response = await axios.get(url); //json의 형식Data가 담겨져 있는 변수\r\n      if (response.data && response.data.photos && response.data.photos.photo) {\r\n        setItems(response.data.photos.photo);\r\n        setTimeout(() => {\r\n          frame.current.classList.add(\"on\");\r\n          setLoading(false);\r\n        }, 2000)\r\n        \r\n      } else {\r\n        console.log(\"데이터 형식이 JSON과 다릅니다\");\r\n      }\r\n    }catch(error){\r\n      console.log(\"데이터를 가져오는 동안 오류가 발생했습니다\");\r\n    }\r\n  }\r\n  useEffect(() => {\r\n   getFlckr(url_interest);\r\n  }, [])\r\n  //리액트에서 컴포넌트는 재사용성이 있어야 합니다\r\n  //즉 같은 기능을 하는 컴포넌트라면 재사용할 수 있어야 한다는 뜻\r\n\r\n  return (\r\n    <>\r\n    <Layout name={\"Gallery\"}>\r\n      {Loading && <img className='loading' src={process.env.PUBLIC_URL + '/img/loading.gif'}/>}\r\n      <div className=\"frame\" ref={frame}>\r\n        <Masonry elementType={div} options={masonryOptions}></Masonry>\r\n      {/* map은 특별하게 콜백함수를 적용한 뒤 배열로 반환하는 성질이 있음 */}\r\n      {Items.map((el, index) => {\r\n        return (\r\n          <article key={index} onClick={() => {setIndex(Index); setOpen(true)}}>\r\n            <div className=\"inner\">\r\n              <div className=\"pic\">\r\n                <img src={`https://live.staticflickr.com/${el.server}/${el.id}_${el.secret}_m.jpg`}\r\n                  alt={el.title} />\r\n              </div>\r\n              <h2>{el.title}</h2>\r\n            </div>\r\n          </article>\r\n          )\r\n        })}\r\n      </div>\r\n    </Layout>\r\n    { Open && (<Pop setOpen={setOpen}>\r\n      <img src={`https://live.staticflickr.com/${Items[Index].server}/${Items[Index].id}_${Items[Index].secret}_b.jpg`} alt={Items[Index].title}/>\r\n    </Pop>)\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Gallery"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}