{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\woori\\\\Desktop\\\\\\uC784\\uACBD\\uD6C8 \\uC870\\uC724\\uC2DD \\uC606\\uC790\\uB9AC \\uC7A0\\uAE50 \\uCC28\\uC9C0\\\\src\\\\components\\\\sub\\\\Gallery.js\",\n  _s = $RefreshSig$();\nimport Layout from '../common/Layout';\nimport Pop from '../common/Pop';\nimport axios from 'axios';\nimport { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Gallery() {\n  _s();\n  const frame = useRef(null);\n  const [Items, setItems] = useState([]);\n  const [Index, setIndex] = useState(0);\n  const [Open, setOpen] = useState(false);\n  /*\r\n  async/await를 사용한 코드는 비동기 작업의 흐름을 더 명확하게 보여줍니다\r\n  또한 await를 통해서 axios호출이 완료될 때까지 기다리게 함으로써\r\n  코드의 실행 순서가 더 직관적입니다\r\n  */\n  const getFlckr = async () => {\n    const base = \"https://www.flickr.com/services/rest/?\";\n    const method = \"flickr.interestingness.getList\";\n    const key = \"6583107ee02a2fb33475eebe21213fbd\";\n    const per_page = 8;\n    const format = \"json\";\n    const url = `${base}method=${method}&api_key=${key}&per_page=${per_page}&format=${format}&nojsoncallback=1`;\n    try {\n      const response = await axios.get(url);\n      if (response.data && response.data.photos && response.data.photos.photo) {\n        setItems(json.data.photos.photo);\n        frame.current.classList.add(\"on\");\n      } else {\n        console.log(\"데이터 형식이 JSON과 다릅니다\");\n      }\n    } catch (error) {\n      console.log(\"데이터를 가져오는 동안 오류가 발생했습니다\");\n    }\n  };\n  useEffect(() => {\n    getFlckr();\n  }, []);\n  //리액트에서 컴포넌트는 재사용성이 있어야 합니다\n  //즉 같은 기능을 하는 컴포넌트라면 재사용할 수 있어야 한다는 뜻\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      name: \"Gallery\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"frame\",\n        ref: frame,\n        children: Items.map((el, index) => {\n          return /*#__PURE__*/_jsxDEV(\"article\", {\n            onClick: () => {\n              setIndex(Index);\n              setOpen(true);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pic\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://live.staticflickr.com/${el.server}/${el.id}_${el.secret}_m.jpg`,\n                  alt: el.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: el.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), Open && /*#__PURE__*/_jsxDEV(Pop, {\n      setOpen: setOpen,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://live.staticflickr.com/${Items[Index].server}/${Items[Index].id}_${Items[Index].secret}_b.jpg`,\n        alt: Items[Index].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n}\n_s(Gallery, \"KQqHXX0te+szayo9w7Cm0MU38MA=\");\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["Layout","Pop","axios","useEffect","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Gallery","_s","frame","Items","setItems","Index","setIndex","Open","setOpen","getFlckr","base","method","key","per_page","format","url","response","get","data","photos","photo","json","current","classList","add","console","log","error","children","name","className","ref","map","el","index","onClick","src","server","id","secret","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/woori/Desktop/임경훈 조윤식 옆자리 잠깐 차지/src/components/sub/Gallery.js"],"sourcesContent":["import Layout from '../common/Layout'\r\nimport Pop from '../common/Pop'\r\nimport axios from 'axios'\r\nimport { useEffect, useState, useRef } from 'react';\r\n\r\nfunction Gallery() {\r\n  \r\n  const frame = useRef(null);\r\n  const [Items, setItems] = useState([]);\r\n  const [Index, setIndex] = useState(0);\r\n  const [Open, setOpen] = useState(false);\r\n  /*\r\n  async/await를 사용한 코드는 비동기 작업의 흐름을 더 명확하게 보여줍니다\r\n  또한 await를 통해서 axios호출이 완료될 때까지 기다리게 함으로써\r\n  코드의 실행 순서가 더 직관적입니다\r\n  */\r\n  const getFlckr = async() => {\r\n    const base = \"https://www.flickr.com/services/rest/?\";\r\n    const method = \"flickr.interestingness.getList\";\r\n    const key = \"6583107ee02a2fb33475eebe21213fbd\";\r\n    const per_page = 8;\r\n    const format = \"json\";\r\n    const url = `${base}method=${method}&api_key=${key}&per_page=${per_page}&format=${format}&nojsoncallback=1`;\r\n    \r\n    try{\r\n      const response = await axios.get(url);\r\n      if (response.data && response.data.photos && response.data.photos.photo) {\r\n        setItems(json.data.photos.photo);\r\n        frame.current.classList.add(\"on\");\r\n      } else {\r\n        console.log(\"데이터 형식이 JSON과 다릅니다\");\r\n      }\r\n    }catch(error){\r\n      console.log(\"데이터를 가져오는 동안 오류가 발생했습니다\");\r\n    }\r\n  }\r\n  useEffect(() => {\r\n   getFlckr();\r\n  }, [])\r\n  //리액트에서 컴포넌트는 재사용성이 있어야 합니다\r\n  //즉 같은 기능을 하는 컴포넌트라면 재사용할 수 있어야 한다는 뜻\r\n\r\n  return (\r\n    <>\r\n    <Layout name={\"Gallery\"}>\r\n      <div className=\"frame\" ref={frame}>\r\n      {/* map은 특별하게 콜백함수를 적용한 뒤 배열로 반환하는 성질이 있음 */}\r\n      {Items.map((el, index) => {\r\n        return (\r\n          <article key={index} onClick={() => {setIndex(Index); setOpen(true)}}>\r\n            <div className=\"inner\">\r\n              <div className=\"pic\">\r\n                <img src={`https://live.staticflickr.com/${el.server}/${el.id}_${el.secret}_m.jpg`}\r\n                  alt={el.title} />\r\n              </div>\r\n              <h2>{el.title}</h2>\r\n            </div>\r\n          </article>\r\n          )\r\n        })}\r\n      </div>\r\n    </Layout>\r\n    { Open && (<Pop setOpen={setOpen}>\r\n      <img src={`https://live.staticflickr.com/${Items[Index].server}/${Items[Index].id}_${Items[Index].secret}_b.jpg`} alt={Items[Index].title}/>\r\n    </Pop>)\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Gallery"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}